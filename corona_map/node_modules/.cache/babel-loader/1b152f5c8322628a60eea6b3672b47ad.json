{"ast":null,"code":"var _jsxFileName = \"/Users/nick/Documents/corona_food/corona_map/src/components/Search.js\";\nimport React from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport axios from 'axios';\nimport Control from 'react-leaflet-control';\nimport { Button, Icon, Menu } from 'semantic-ui-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nvar myLat0 = 0;\nvar myLong0 = 0;\nvar map = Map;\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      'apiKey': 'BDKJluIkcQa-Lwn_Ye9BfW_m8ajO-agWP-WXdpyAMJ3O6iAhangiPCn8Sjch8MF2mikafe4gxR1xxM0h69cCAYBuFlTn0tOvHc2vpiogz3TAHkaRGDeZVRXf46i9XnYx',\n      'active': null,\n      'isActive': false,\n      'isgood': false,\n      'popup': null,\n      'popPosition': null,\n      'loading': false,\n      'data2': this.props.data2,\n      'pickupChecked': false,\n      'viewport': {\n        center: [0, 0],\n        zoom: 14\n      },\n      'popup': true,\n      'myLat': null,\n      'myLong': null,\n      'data': this.props.data,\n      'url': ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.props.data,\n      data2: this.props.data\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n  }\n\n  onGo(e) {\n    console.log(e.target.getCenter());\n  }\n\n  updateViewport(e) {\n    myLat0 = e.center[0];\n    myLong0 = e.center[1];\n  }\n\n  prepare(e) {\n    e.preventDefault();\n    var send = {\n      location: null,\n      lat: myLat0,\n      long: myLong0\n    };\n    axios.post('http://localhost:3001/apiCall', send).then(res => {\n      var r = res.data;\n\n      if (this.props.food_type) {\n        var f;\n        f = r.data.filter(biz => {\n          var i;\n\n          for (i = 0; i < biz.categories.length; i++) {\n            var item = biz.categories[i].title.toUpperCase();\n\n            if (item.includes(this.props.food_type.toUpperCase())) {\n              return biz;\n            }\n          }\n        });\n        this.setState({\n          data2: f,\n          isgood: r.isgood,\n          viewport: r.viewport,\n          loading: r.isloading\n        });\n      } else {\n        this.setState({\n          data: r.data,\n          isgood: r.isgood,\n          viewport: r.viewport,\n          loading: r.isloading\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  copyLink(e) {\n    console.log(e);\n    this.setState({\n      url: e\n    });\n    console.log(this.state.url);\n  } //<Button align=\"right\" onClick={this.copyLink.bind(this, b.url)}><i className=\"fa fa-copy\"></i></Button>\n\n  /*\n  \n  {this.props.friendSearch && \n         <Marker key={this.state.data.id}\n        position={[this.state.data.coordinates.latitude, this.state.data.coordinates.longitude]}\n         >\n         <Popup  maxWidth=\"200\" maxHeight=\"200\" onClick={this.setPopup}\n         position={[this.state.data.coordinates.latitude, this.state.data.coordinates.longitude]} >\n          <div>\n        <h2>{this.state.data.name}</h2>\n        <img src={this.state.data.image_url} height=\"150px\" width=\"200px\"/>\n        <p>Rating: {this.state.data.rating}</p>\n        <Button onClick={this.state.dpoints} name=\"like\">Like</Button>\n        <ul>\n        {this.state.data.categories.map((i) => (\n        <li>{i.title}</li>\n    ))}\n        </ul>\n        <p><a href={this.state.data.url}>Yelp Page</a></p>\n        <p>Phone: <a href={\"tel:\" + this.state.data.phone}>{this.state.data.phone}</a></p> \n        </div>\n        </Popup>\n          \n    \n        </Marker>\n  \n  \n       }\n       */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 4\n      }\n    }, this.props.isgood && /*#__PURE__*/React.createElement(Map, {\n      onViewportChanged: this.updateViewport.bind(this),\n      viewport: this.props.viewport,\n      useFlyTo: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href= \\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Control, {\n      position: \"topleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.prepare.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }, \" Search Area\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, \"Reset and search near me\")), this.props.food_type && this.state.data2.map(b => /*#__PURE__*/React.createElement(Marker, {\n      key: b.id,\n      position: [b.coordinates.latitude, b.coordinates.longitude],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      onClick: this.setPopup,\n      position: [b.coordinates.latitude, b.coordinates.longitude],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, b.name), /*#__PURE__*/React.createElement(\"img\", {\n      src: b.image_url,\n      height: \"150px\",\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, \"Rating: \", b.rating), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 8\n      }\n    }, \"Known for:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, b.categories.map(i => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, i.title))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: b.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 10\n      }\n    }, \"Yelp Page\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, \"Phone: \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"tel:\" + b.phone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, b.phone)))))) || this.state.data.map(b => /*#__PURE__*/React.createElement(Marker, {\n      key: b.id,\n      position: [b.coordinates.latitude, b.coordinates.longitude],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      maxWidth: \"200\",\n      maxHeight: \"200\",\n      onClick: this.setPopup,\n      position: [b.coordinates.latitude, b.coordinates.longitude],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, b.name), /*#__PURE__*/React.createElement(\"img\", {\n      src: b.image_url,\n      height: \"150px\",\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, \"Rating: \", b.rating), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.dpoints,\n      as: \"div\",\n      labelPosition: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), \"Like\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, b.categories.map(i => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, i.title))), /*#__PURE__*/React.createElement(Button, {\n      animated: \"vertical\",\n      onClick: () => window.open(b.url),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button.Content, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, \"Yelp Page\"), /*#__PURE__*/React.createElement(Button.Content, {\n      visible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"food\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: b.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      align: \"right\",\n      animated: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button.Content, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, \"Copy Link\"), /*#__PURE__*/React.createElement(Button.Content, {\n      visible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"copy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, \"Phone: \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"tel:\" + b.phone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, b.phone))))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/nick/Documents/corona_food/corona_map/src/components/Search.js"],"names":["React","Map","Marker","Popup","TileLayer","axios","Control","Button","Icon","Menu","CopyToClipboard","myLat0","myLong0","map","Search","Component","state","props","data2","center","zoom","data","componentDidMount","setState","componentWillReceiveProps","nextProps","console","log","onGo","e","target","getCenter","updateViewport","prepare","preventDefault","send","location","lat","long","post","then","res","r","food_type","f","filter","biz","i","categories","length","item","title","toUpperCase","includes","isgood","viewport","loading","isloading","catch","err","copyLink","url","render","bind","b","id","coordinates","latitude","longitude","setPopup","name","image_url","rating","phone","dpoints","window","open"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Map, Marker, Popup, TileLayer, type Viewport} from 'react-leaflet';\nimport axios from 'axios';\nimport Control from 'react-leaflet-control';\nimport {Button, Icon, Menu} from 'semantic-ui-react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n\nvar myLat0 = 0;\nvar myLong0 = 0;\nvar map = Map;\nclass Search extends React.Component<{},{ viewport: Viewport },> {\n\tstate = {\n    'apiKey': 'BDKJluIkcQa-Lwn_Ye9BfW_m8ajO-agWP-WXdpyAMJ3O6iAhangiPCn8Sjch8MF2mikafe4gxR1xxM0h69cCAYBuFlTn0tOvHc2vpiogz3TAHkaRGDeZVRXf46i9XnYx',\n    'active': null,\n    'isActive': false,\n    'isgood': false,\n    'popup': null,\n    'popPosition': null,\n    'loading': false,\n    'data2' : this.props.data2,\n    'pickupChecked': false,\n    'viewport': {center: [0, 0], zoom: 14},\n    'popup': true,\n    'myLat': null,\n    'myLong': null,\n    'data': this.props.data,\n    'url': ''\n\n\n    \n  }\n  componentDidMount(){\n  \tthis.setState({data: this.props.data, data2: this.props.data});\n  }\n\n  componentWillReceiveProps(nextProps){\n    console.log(nextProps);\n  }\n\n  onGo(e){\n  \tconsole.log(e.target.getCenter());\n  }\n\n  updateViewport(e){\n  myLat0 = e.center[0];\n  myLong0 = e.center[1];\n\n}\n\nprepare(e){\n  e.preventDefault();\n  var send = {location: null, lat: myLat0, long: myLong0};\n  axios.post('http://localhost:3001/apiCall', send)\n  .then( (res) => {\n     var r = res.data;\n     if(this.props.food_type){\n      var f;\n    f = r.data.filter(biz => {\n    var i;\n    for(i=0; i < biz.categories.length; i++){\n      var item = biz.categories[i].title.toUpperCase()\n      if(item.includes(this.props.food_type.toUpperCase())){\n      return biz;\n    }\n    }\n  });\n    this.setState({data2: f, isgood: r.isgood, viewport: r.viewport, loading: r.isloading});\n  }\n  else{\n    this.setState({data: r.data, isgood: r.isgood, viewport: r.viewport, loading: r.isloading});\n  }\n    \n  })\n  .catch( (err) => {\n    console.log(err);\n  })\n}\n\n\ncopyLink(e){\n  console.log(e);\n  this.setState({url: e});\n  console.log(this.state.url);\n}\n\n//<Button align=\"right\" onClick={this.copyLink.bind(this, b.url)}><i className=\"fa fa-copy\"></i></Button>\n/*\n\n{this.props.friendSearch && \n       <Marker key={this.state.data.id}\n      position={[this.state.data.coordinates.latitude, this.state.data.coordinates.longitude]}\n       >\n       <Popup  maxWidth=\"200\" maxHeight=\"200\" onClick={this.setPopup}\n       position={[this.state.data.coordinates.latitude, this.state.data.coordinates.longitude]} >\n        <div>\n      <h2>{this.state.data.name}</h2>\n      <img src={this.state.data.image_url} height=\"150px\" width=\"200px\"/>\n      <p>Rating: {this.state.data.rating}</p>\n      <Button onClick={this.state.dpoints} name=\"like\">Like</Button>\n      <ul>\n      {this.state.data.categories.map((i) => (\n      <li>{i.title}</li>\n  ))}\n      </ul>\n      <p><a href={this.state.data.url}>Yelp Page</a></p>\n      <p>Phone: <a href={\"tel:\" + this.state.data.phone}>{this.state.data.phone}</a></p> \n      </div>\n      </Popup>\n        \n  \n      </Marker>\n\n\n     }\n     */\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\n    {this.props.isgood && (\n    <Map\n    onViewportChanged={this.updateViewport.bind(this)}\n    viewport = {this.props.viewport}\n    useFlyTo={true}\n    >\n    <TileLayer\n    url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    attribution = '&copy; <a href= \"https://osm.org/copyright\">OpenStreetMap</a>\n    contributors'\n    />\n\n    <Control position=\"topleft\">\n    <button onClick={this.prepare.bind(this)}> Search Area</button>\n    <button>Reset and search near me</button>\n    </Control>\n   \n\n    \n        {this.props.food_type && this.state.data2.map((b) => (\n          <Marker key={b.id}\n      position={[b.coordinates.latitude, b.coordinates.longitude]}\n       >\n       <Popup onClick={this.setPopup} \n       position={[b.coordinates.latitude, b.coordinates.longitude]} >\n        <div>\n      <h2>{b.name}</h2>\n      <img src={b.image_url} height=\"150px\" width=\"200px\"/>\n      <p>Rating: {b.rating}</p>\n       <p>Known for:</p>\n      <ul>\n      {b.categories.map((i) => (\n     \t<li>{i.title}</li>\n  ))}\n   \t\t</ul>\n      <p><a href={b.url}>Yelp Page</a></p>\n      <p>Phone: <a href={\"tel:\" + b.phone}>{b.phone}</a></p> \n\n      </div>\n      </Popup>\n        \n  \n      </Marker>))\n    ||\n     this.state.data.map((b) => (\n      <Marker key={b.id}\n      position={[b.coordinates.latitude, b.coordinates.longitude]}\n       >\n       <Popup  maxWidth=\"200\" maxHeight=\"200\" onClick={this.setPopup}\n       position={[b.coordinates.latitude, b.coordinates.longitude]} >\n        <div>\n      <h2>{b.name}</h2>\n      <img src={b.image_url} height=\"150px\" width=\"200px\"/>\n      <p>Rating: {b.rating}</p>\n\n\n      <Button onClick={this.props.dpoints} as='div' labelPosition='right'>\n      <Button icon>\n        <Icon name='heart' />\n        Like\n      </Button>\n      </Button>      \n      \n      <ul>\n      {b.categories.map((i) => (\n     \t<li>{i.title}</li>\n  ))}\n   \t\t</ul>\n      <Button animated='vertical' onClick={() => window.open(b.url)}>\n      <Button.Content hidden>Yelp Page</Button.Content>\n      <Button.Content visible>\n        <Icon name='food' />\n      </Button.Content>\n    </Button>\n      <CopyToClipboard text={b.url}>\n      <Button align=\"right\" animated='vertical'>\n      <Button.Content hidden>Copy Link</Button.Content>\n      <Button.Content visible>\n        <Icon name='copy' />\n      </Button.Content>\n    </Button>\n    </CopyToClipboard>\n      <p>Phone: <a href={\"tel:\" + b.phone}>{b.phone}</a></p> \n      </div>\n      </Popup>\n        \n  \n      </Marker>\n\n      ))}\n\n     \n\n    </Map>\n    )}\n    </div>\n    )\n\t}\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}