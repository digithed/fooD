{"ast":null,"code":"export function apiCall(lat, long) {\n  var lim = 30;\n  axios.get('https://cors-anywhere.herokuapp.com/' + 'https://api.yelp.com/v3/businesses/search', {\n    params: {\n      location: this.state.location,\n      latitude: lat,\n      longitude: long,\n      limit: lim\n    },\n    headers: {\n      Authorization: 'Bearer ' + this.state.apiKey\n    }\n  }).then(res => {\n    console.log(res.data);\n\n    if (lat == null && long == null) {\n      lat = res.data.businesses[0].coordinates.latitude;\n      long = res.data.businesses[0].coordinates.longitude;\n    }\n\n    if (!this.state.pickupChecked) {\n      res.data = res.data.businesses.filter(biz => {\n        if (this.state.food_filter) {\n          var i;\n\n          for (i = 0; i < biz.categories.length; i++) {\n            var item = biz.categories[i].title.toUpperCase();\n\n            if (biz.rating >= 4 && item.includes(this.state.food_type.toUpperCase())) {\n              return biz;\n            }\n          }\n        } else {\n          if (biz.rating >= 4) {\n            return biz;\n          }\n        }\n      });\n    }\n\n    console.log('thru');\n    this.setState({\n      data: res.data,\n      data2: res.data,\n      isgood: true,\n      viewport: {\n        center: [lat, long],\n        zoom: 15\n      },\n      loading: false\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n}","map":{"version":3,"sources":["/Users/nick/Documents/corona_food/corona_map/src/components/utils.js"],"names":["apiCall","lat","long","lim","axios","get","params","location","state","latitude","longitude","limit","headers","Authorization","apiKey","then","res","console","log","data","businesses","coordinates","pickupChecked","filter","biz","food_filter","i","categories","length","item","title","toUpperCase","rating","includes","food_type","setState","data2","isgood","viewport","center","zoom","loading","catch","err"],"mappings":"AAAA,OAAO,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AACjC,MAAIC,GAAG,GAAG,EAAV;AACAC,EAAAA,KAAK,CAACC,GAAN,CAAU,yCAAuC,2CAAjD,EAA8F;AAC3FC,IAAAA,MAAM,EAAE;AACPC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADd;AAEPE,MAAAA,QAAQ,EAAER,GAFH;AAGPS,MAAAA,SAAS,EAAER,IAHJ;AAIPS,MAAAA,KAAK,EAAER;AAJA,KADmF;AAO3FS,IAAAA,OAAO,EAAE;AACVC,MAAAA,aAAa,EAAE,YAAY,KAAKL,KAAL,CAAWM;AAD5B;AAPkF,GAA9F,EAWGC,IAXH,CAWSC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACC,QAAGlB,GAAG,IAAI,IAAP,IAAeC,IAAI,IAAI,IAA1B,EAA+B;AAClCD,MAAAA,GAAG,GAAGe,GAAG,CAACG,IAAJ,CAASC,UAAT,CAAoB,CAApB,EAAuBC,WAAvB,CAAmCZ,QAAzC;AACAP,MAAAA,IAAI,GAAGc,GAAG,CAACG,IAAJ,CAASC,UAAT,CAAoB,CAApB,EAAuBC,WAAvB,CAAmCX,SAA1C;AACD;;AACG,QAAG,CAAC,KAAKF,KAAL,CAAWc,aAAf,EAA6B;AAE7BN,MAAAA,GAAG,CAACG,IAAJ,GAAWH,GAAG,CAACG,IAAJ,CAASC,UAAT,CAAoBG,MAApB,CAA4BC,GAAD,IAAS;AAC7C,YAAG,KAAKhB,KAAL,CAAWiB,WAAd,EAA0B;AACzB,cAAIC,CAAJ;;AACA,eAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAAGF,GAAG,CAACG,UAAJ,CAAeC,MAA5B,EAAoCF,CAAC,EAArC,EAAwC;AAC3C,gBAAIG,IAAI,GAAGL,GAAG,CAACG,UAAJ,CAAeD,CAAf,EAAkBI,KAAlB,CAAwBC,WAAxB,EAAX;;AACG,gBAAGP,GAAG,CAACQ,MAAJ,IAAc,CAAd,IAAmBH,IAAI,CAACI,QAAL,CAAc,KAAKzB,KAAL,CAAW0B,SAAX,CAAqBH,WAArB,EAAd,CAAtB,EAAwE;AACrE,qBAAOP,GAAP;AACD;AACJ;AACA,SARC,MASG;AACH,cAAGA,GAAG,CAACQ,MAAJ,IAAc,CAAjB,EAAmB;AAClB,mBAAOR,GAAP;AACA;AAED;AAED,OAjBU,CAAX;AAkBD;;AACDP,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACE,SAAKiB,QAAL,CAAc;AAAChB,MAAAA,IAAI,EAAEH,GAAG,CAACG,IAAX;AAAiBiB,MAAAA,KAAK,EAAEpB,GAAG,CAACG,IAA5B;AAAkCkB,MAAAA,MAAM,EAAE,IAA1C;AACZC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,MAAM,EAAE,CAACtC,GAAD,EAAMC,IAAN,CAAT;AACRsC,QAAAA,IAAI,EAAE;AADE,OADE;AAGZC,MAAAA,OAAO,EAAE;AAHG,KAAd;AAOD,GA9CH,EA+CGC,KA/CH,CA+CUC,GAAG,IAAI;AACb1B,IAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACD,GAjDH;AAmDD","sourcesContent":["export function apiCall(lat, long) {\n  var lim = 30;\n  axios.get('https://cors-anywhere.herokuapp.com/'+'https://api.yelp.com/v3/businesses/search', {\n     params: {\n      location: this.state.location,\n      latitude: lat,\n      longitude: long,\n      limit: lim,\n     },\n     headers: {\n    Authorization: 'Bearer ' + this.state.apiKey\n }\n    })\n    .then( res => {\n      console.log(res.data);\n       if(lat == null && long == null){\n  \t\tlat = res.data.businesses[0].coordinates.latitude;\n  \t\tlong = res.data.businesses[0].coordinates.longitude;\n  }\n      if(!this.state.pickupChecked){\n\n      res.data = res.data.businesses.filter((biz) => {\n        if(this.state.food_filter){\n        \tvar i;\n        \tfor(i=0; i < biz.categories.length; i++){\n  \t\t\t\tvar item = biz.categories[i].title.toUpperCase()\n        \tif(biz.rating >= 4 && item.includes(this.state.food_type.toUpperCase())){\n            return biz;\n          }\n      }\n      }\n      \telse{\n      \t\tif(biz.rating >= 4){\n      \t\t\treturn biz;\n      \t\t}\n\n      \t}\n\n      })\n    }\n    console.log('thru');\n      this.setState({data: res.data, data2: res.data, isgood: true,\n        viewport: {center: [lat, long],\n          zoom: 15},\n        loading: false\n      });\n      \n    \n    })\n    .catch( err => {\n      console.log(err);\n    })\n\n}"]},"metadata":{},"sourceType":"module"}