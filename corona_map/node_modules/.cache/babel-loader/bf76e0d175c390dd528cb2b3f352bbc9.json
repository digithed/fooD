{"ast":null,"code":"import axios from 'axios';\nexport function apiCall(location, lat, long) {\n  var lim = 30;\n  axios.get('https://cors-anywhere.herokuapp.com/' + 'https://api.yelp.com/v3/businesses/search', {\n    params: {\n      location: location,\n      latitude: lat,\n      longitude: long,\n      limit: lim\n    },\n    headers: {\n      Authorization: 'Bearer ' + 'BDKJluIkcQa-Lwn_Ye9BfW_m8ajO-agWP-WXdpyAMJ3O6iAhangiPCn8Sjch8MF2mikafe4gxR1xxM0h69cCAYBuFlTn0tOvHc2vpiogz3TAHkaRGDeZVRXf46i9XnYx'\n    }\n  }).then(res => {\n    console.log(res.data);\n\n    if (lat == null && long == null) {\n      lat = res.data.businesses[0].coordinates.latitude;\n      long = res.data.businesses[0].coordinates.longitude;\n    }\n\n    res.data = res.data.businesses.filter(biz => {\n      if (biz.rating >= 4) {\n        return biz;\n      }\n    });\n    return [res.data, res.data, true, {\n      center: [lat, long],\n      zoom: 15\n    }, false];\n  }).catch(err => {\n    console.log(err);\n  });\n}\nexport function apiCallFood(location, lat, long, food_type) {\n  var lim = 30;\n  axios.get('https://cors-anywhere.herokuapp.com/' + 'https://api.yelp.com/v3/businesses/search', {\n    params: {\n      location: location,\n      latitude: lat,\n      longitude: long,\n      limit: lim\n    },\n    headers: {\n      Authorization: 'Bearer ' + 'BDKJluIkcQa-Lwn_Ye9BfW_m8ajO-agWP-WXdpyAMJ3O6iAhangiPCn8Sjch8MF2mikafe4gxR1xxM0h69cCAYBuFlTn0tOvHc2vpiogz3TAHkaRGDeZVRXf46i9XnYx'\n    }\n  }).then(res => {\n    console.log(res.data);\n\n    if (lat == null && long == null) {\n      lat = res.data.businesses[0].coordinates.latitude;\n      long = res.data.businesses[0].coordinates.longitude;\n    }\n\n    res.data = res.data.businesses.filter(biz => {\n      var i;\n\n      for (i = 0; i < biz.categories.length; i++) {\n        var item = biz.categories[i].title.toUpperCase();\n\n        if (biz.rating >= 4 && item.includes(food_type.toUpperCase())) {\n          return biz;\n        } else {\n          if (biz.rating >= 4) {\n            return biz;\n          }\n        }\n      }\n    });\n    return [res.data, res.data, true, {\n      center: [lat, long],\n      zoom: 15\n    }, false];\n  }).catch(err => {\n    console.log(err);\n  });\n}","map":{"version":3,"sources":["/Users/nick/Documents/corona_food/corona_map/src/components/utils.js"],"names":["axios","apiCall","location","lat","long","lim","get","params","latitude","longitude","limit","headers","Authorization","then","res","console","log","data","businesses","coordinates","filter","biz","rating","center","zoom","catch","err","apiCallFood","food_type","i","categories","length","item","title","toUpperCase","includes"],"mappings":"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","sourcesContent":["import axios from 'axios';\nexport function apiCall(location, lat, long) {\n  var lim = 30;\n  axios.get('https://cors-anywhere.herokuapp.com/'+'https://api.yelp.com/v3/businesses/search', {\n     params: {\n      location: location,\n      latitude: lat,\n      longitude: long,\n      limit: lim,\n     },\n     headers: {\n    Authorization: 'Bearer ' + 'BDKJluIkcQa-Lwn_Ye9BfW_m8ajO-agWP-WXdpyAMJ3O6iAhangiPCn8Sjch8MF2mikafe4gxR1xxM0h69cCAYBuFlTn0tOvHc2vpiogz3TAHkaRGDeZVRXf46i9XnYx'\n }\n    })\n    .then( res => {\n      console.log(res.data);\n       if(lat == null && long == null){\n  \t\tlat = res.data.businesses[0].coordinates.latitude;\n  \t\tlong = res.data.businesses[0].coordinates.longitude;\n  }\n      \n\n      res.data = res.data.businesses.filter((biz) => {\n        \n      \t\tif(biz.rating >= 4){\n      \t\t\treturn biz;\n\n      \t}\n\n      })\n      return [res.data, res.data, true, {center: [lat,long], zoom:15}, false]\n    \n      \n    \n    })\n    .catch( err => {\n      console.log(err);\n    })\n\n}\n\nexport function apiCallFood(location, lat, long, food_type) {\n  var lim = 30;\n  axios.get('https://cors-anywhere.herokuapp.com/'+'https://api.yelp.com/v3/businesses/search', {\n     params: {\n      location: location,\n      latitude: lat,\n      longitude: long,\n      limit: lim,\n     },\n     headers: {\n    Authorization: 'Bearer ' + 'BDKJluIkcQa-Lwn_Ye9BfW_m8ajO-agWP-WXdpyAMJ3O6iAhangiPCn8Sjch8MF2mikafe4gxR1xxM0h69cCAYBuFlTn0tOvHc2vpiogz3TAHkaRGDeZVRXf46i9XnYx'\n }\n    })\n    .then( res => {\n      console.log(res.data);\n       if(lat == null && long == null){\n      lat = res.data.businesses[0].coordinates.latitude;\n      long = res.data.businesses[0].coordinates.longitude;\n  }\n      \n\n      res.data = res.data.businesses.filter((biz) => {\n          var i;\n          for(i=0; i < biz.categories.length; i++){\n          var item = biz.categories[i].title.toUpperCase()\n          if(biz.rating >= 4 && item.includes(food_type.toUpperCase())){\n            return biz;\n          }\n      \n      \n        else{\n          if(biz.rating >= 4){\n            return biz;\n          }\n        }\n\n        }\n\n      })\n      return [res.data, res.data, true, {center: [lat,long], zoom:15}, false]\n    \n      \n    \n    })\n    .catch( err => {\n      console.log(err);\n    })\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}